You are given K eggs, and you have access to a building with N floors from 1 to N. 
Each egg is identical in function, and if an egg breaks, you cannot drop it again.
You know that there exists a floor F with 0 <= F <= N such that any egg dropped at a floor higher than F will break, and any egg dropped at or below floor F will not break.
Each move, you may take an egg (if you have an unbroken one) and drop it from any floor X (with 1 <= X <= N). 
Your goal is to know with certainty what the value of F is.
What is the minimum number of moves that you need to know with certainty what F is, regardless of the initial value of F?
 
However, there is a catch: the building may have multiple floors where eggs break.
For example, there could be a floor F1 where eggs break, and another floor F2 where eggs also break.
In this case, you would not know for sure which floor is the actual F.
 
Note that the floors where eggs break are not necessarily consecutive.
For example, there could be a floor F1 where eggs break, and another floor F3 where eggs also break, but there is no floor F2 where eggs break.
 
Can you still find the minimum number of moves that you need to know with certainty what F is, regardless of the initial value of F?